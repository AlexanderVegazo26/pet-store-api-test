name: Functional Tests

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: "Test suite to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - pet
          - store
          - user
      debug:
        description: "Run in debug mode"
        required: false
        type: boolean
        default: false

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Test Repository
        uses: actions/checkout@v4

      - name: Checkout Swagger Petstore
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-petstore
          path: swagger-petstore

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "temurin"
          cache: "maven"

      - name: Build & Start Petstore
        run: |
          cd swagger-petstore
          mvn clean package -DskipTests
          docker build -t swaggerapi/petstore3:unstable .
          docker run --name swaggerapi-petstore3 -d -p 8080:8080 swaggerapi/petstore3:unstable
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/api/v3/openapi.json)" != "200" ]]; do sleep 5; done' || false

      - name: Setup Node.js and Install Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"
          cache-dependency-path: "./api-test-automation/package-lock.json"

      - name: Install Dependencies and Playwright
        working-directory: ./api-test-automation
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Verify Project Structure
        working-directory: ./api-test-automation
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Source directory:"
          ls -la src/api || echo "src/api not found"
          echo "Tests directory:"
          ls -la tests || echo "tests not found"

      - name: Build TypeScript
        working-directory: ./api-test-automation
        run: |
          echo "TypeScript version:"
          npx tsc --version
          echo "Building TypeScript files..."
          npx tsc --project tsconfig.json

      - name: Run API Tests
        working-directory: ./api-test-automation
        run: |
          if [ "${{ github.event.inputs.debug }}" = "true" ]; then
            DEBUG=pw:api* npm run test:debug
          else
            DEBUG=pw:api* npm run test
          fi

      - name: Prepare Test Report
        if: always()
        working-directory: ./api-test-automation
        run: |
          mkdir -p test-report
          cp -r playwright-report/* test-report/
          cat << EOF > test-report/config.html
          <html><head><style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .config-section { margin-bottom: 30px; }
          </style></head>
          <body>
            <h1>Test Configuration</h1>
            <div class="config-section">
              <h3>Test Parameters</h3>
              <p>Test Suite: ${{ github.event.inputs.test_type || 'all' }}</p>
              <p>Debug Mode: ${{ github.event.inputs.debug || 'false' }}</p>
              <p>API URL: http://localhost:8080/api/v3</p>
              <p>Run Date: $(date)</p>
              <p>Run ID: ${{ github.run_id }}</p>
            </div>
            <p><a href="./index.html">View Test Report</a></p>
          </body></html>
          EOF

      - name: Deploy Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api-test-automation/test-report
          force_orphan: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      - name: Cleanup
        if: always()
        run: |
          docker stop swaggerapi-petstore3 || true
          docker rm swaggerapi-petstore3 || true
          docker image rm swaggerapi/petstore3:unstable || true
          docker system prune -f

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
