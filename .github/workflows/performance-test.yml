name: Performance Tests

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      test_type:
        description: "Test suite to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - pet
          - store
          - user
      debug:
        description: "Run in debug mode"
        required: false
        type: boolean
        default: false

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Test Repository
        uses: actions/checkout@v4

      - name: Checkout Swagger Petstore
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-petstore
          path: swagger-petstore

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "temurin"
          cache: "maven"

      - name: Build & Start Petstore
        run: |
          cd swagger-petstore
          mvn clean package -DskipTests
          docker build -t swaggerapi/petstore3:unstable .
          docker run --name swaggerapi-petstore3 -d -p 8080:8080 swaggerapi/petstore3:unstable
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/api/v3/openapi.json)" != "200" ]]; do sleep 5; done' || false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Dependencies
        working-directory: ./api-test-performance
        run: npm ci

      - name: Set Test Configuration
        working-directory: ./api-test-performance
        run: |
          echo "# Pet simulation variables
          PET_RAMP_DURATION=5
          CREATE_PETS=10
          READ_PETS=20

          # Store simulation variables
          ORDER_RAMP_DURATION=5
          CREATE_ORDERS=10
          READ_ORDERS=20
          DELETE_ORDERS=5
          READ_INVENTORY=15

          # User simulation variables
          USER_RAMP_DURATION=5
          CREATE_USERS=10
          READ_USERS=20
          UPDATE_USERS=8
          DELETE_USERS=5
          AUTH_USERS=25" > .env

          # Make environment variables available
          while IFS= read -r line || [[ -n "$line" ]]; do
            if [[ ! "$line" =~ ^#.*$ ]] && [[ ! -z "$line" ]]; then
              echo "export $line" >> $GITHUB_ENV
            fi
          done < .env

      - name: Run API Tests
        working-directory: ./api-test-performance
        run: |
          source .env
          if [[ "${{ github.event.inputs.test_type }}" == "pet" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run pet-simulation
          fi
          if [[ "${{ github.event.inputs.test_type }}" == "store" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run store-simulation
          fi
          if [[ "${{ github.event.inputs.test_type }}" == "user" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run user-simulation
          fi

      - name: Create index.html for GitHub Pages
        working-directory: ./api-test-performance/target/gatling
        run: |
          LATEST_REPORT=$(ls -td jssimulation-*/ | head -n 1)
          if [ ! -f "${LATEST_REPORT}index.html" ]; then
            echo "No index.html found in latest report directory: ${LATEST_REPORT}"
            exit 1
          fi

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gatling-report
          path: ./api-test-performance/target/gatling/jssimulation-*/
          retention-days: 30

      - name: Deploy Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api-test-performance/target/gatling/jssimulation-*
          destination_dir: performance-report
          force_orphan: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      - name: Print Report URL
        run: |
          echo "Performance Test Report will be available at:"
          LATEST_REPORT=$(ls -td ./api-test-performance/target/gatling/jssimulation-*/ | head -n 1)
          REPORT_NAME=$(basename "$LATEST_REPORT")
          echo "https://alexandervegazo26.github.io/pet-store-api-test/performance-report/"

      - name: Wait for GitHub Pages
        run: sleep 30

      - name: Cleanup
        if: always()
        run: |
          docker stop swaggerapi-petstore3 || true
          docker rm swaggerapi-petstore3 || true
          docker image rm swaggerapi/petstore3:unstable || true
          docker system prune -f

concurrency:
  group: "petstore-${{ github.ref }}"
  cancel-in-progress: false
