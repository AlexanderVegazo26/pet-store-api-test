name: Performance Tests

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      test_type:
        description: "Test type to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - pet
          - store
          - user

jobs:
  performance-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Performance Tests
        uses: actions/checkout@v4

      - name: Checkout Swagger Petstore
        uses: actions/checkout@v4
        with:
          repository: swagger-api/swagger-petstore
          path: swagger-petstore

      - name: Build Petstore Docker Image
        working-directory: ./swagger-petstore
        run: docker build -t swaggerapi/petstore3:unstable .

      - name: Start Petstore Container
        run: |
          docker run --name swaggerapi-petstore3 -d -p 8080:8080 swaggerapi/petstore3:unstable
          # Wait for server to be ready
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/api/v3/openapi.json)" != "200" ]]; do sleep 5; done' || false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Dependencies
        working-directory: ./api-test-performance
        run: npm ci

      - name: Install Gatling CLI
        working-directory: ./api-test-performance
        run: |
          curl -fL https://github.com/gatling/gatling/releases/download/v3.9.5/gatling-3.9.5.zip -o gatling.zip
          unzip gatling.zip
          echo "${PWD}/gatling-3.9.5/bin" >> $GITHUB_PATH

      - name: Set Test Configuration
        working-directory: ./api-test-performance
        run: |
          cat << EOF > .env
          # Pet simulation variables
          export PET_RAMP_DURATION=5
          export CREATE_PETS=10
          export READ_PETS=20

          # Store simulation variables
          export ORDER_RAMP_DURATION=5
          export CREATE_ORDERS=10
          export READ_ORDERS=20
          export DELETE_ORDERS=5
          export READ_INVENTORY=15

          # User simulation variables
          export USER_RAMP_DURATION=5
          export CREATE_USERS=10
          export READ_USERS=20
          export UPDATE_USERS=8
          export DELETE_USERS=5
          export AUTH_USERS=25
          EOF

          # Make environment variables available
          echo "$(cat .env)" >> $GITHUB_ENV

      - name: Run Performance Tests
        working-directory: ./api-test-performance
        run: |
          source .env
          if [[ "${{ github.event.inputs.test_type }}" == "pet" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run pet-simulation
          fi
          if [[ "${{ github.event.inputs.test_type }}" == "store" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run store-simulation
          fi
          if [[ "${{ github.event.inputs.test_type }}" == "user" || "${{ github.event.inputs.test_type }}" == "all" ]]; then
            npm run user-simulation
          fi

      - name: Cleanup Docker
        if: always()
        run: |
          docker stop swaggerapi-petstore3 || true
          docker rm swaggerapi-petstore3 || true
          docker image rm swaggerapi/petstore3:unstable || true
          docker system prune -f

      - name: Cleanup Environment
        if: always()
        working-directory: ./api-test-performance
        run: |
          rm -rf swagger-petstore
          rm -rf gatling-3.9.5
          rm -f gatling.zip
          npm run clean

      - name: Check Test Results
        if: always()
        run: |
          if [ -f target/gatling/**/simulation.log ]; then
            if grep -q "status.find.is(200), but actually found 500" target/gatling/**/simulation.log; then
              echo "Tests failed with 500 errors"
              exit 1
            fi
          else
            echo "No simulation log found"
            exit 1
          fi

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
